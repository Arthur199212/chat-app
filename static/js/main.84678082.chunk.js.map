{"version":3,"sources":["Components/LogInPage.js","Components/InputTextBar.js","Components/FormDialog.js","Components/MenuBar.js","Helpers/getAvatarColor.helper.js","Components/Message.js","Components/ChatBody.js","Components/OfflineNotification.js","Components/NotFound.js","Helpers/notification.helper.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","paper_wrapper","display","justifyContent","alignItems","paper","flexDirection","avatar","margin","spacing","backgroundColor","palette","primary","main","header","textTransform","subheader","form","width","marginTop","submit","author","textAlign","author_link","color","textDecoration","LogInPage","_ref","onClick","validationError","classes","react_default","a","createElement","react_router","render","_ref2","history","Grid","container","component","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","Forum_default","Typography","variant","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","error","onKeyPress","e","key","preventDefault","push","Button","size","Box","mt","href","target","rel","wrapper","position","bottom","padding","input","marginLeft","flex","iconButton","blue","divider","InputTextBar","handleSubmit","InputBase","placeholder","Divider","IconButton","Send_default","FormDialog","open","onClose","handleSubmiteName","hadleLogOut","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","type","DialogActions","menu_bar","menu_toolbar","menu_statuses_bar","OnlineSwitch","withStyles","switchBase","red","&$checked","green","&$checked + $track","checked","track","Switch","MenuBar","connection","dialog","handleDialogOpen","handleDialogClose","connectionMessage","Fragment","AppBar","Toolbar","FormControlLabel","control","labelPlacement","aria-label","aria-controls","aria-haspopup","AccountCircle_default","colors","card","card_self","card_self_unsent","grey","message_container","message_container_reverse","message_header","flexWrap","message_header_item","marginRight","Message","from","message","unsent","time","cardClass","textPrimary","textSecondary","avatarColor","messageTime","style","toUpperCase","Card","ChatBody","chatMessages","useEffect","pageHeight","document","body","offsetHeight","window","scrollTo","Container","map","moment","tz","format","userName","firstLetter","toLocaleLowerCase","index","indexOf","slice","getAvatarColor","info_wrapper","info_container","infoIcon","icon","fontSize","iconVariant","opacity","OfflineNotification","SnackbarContent","aria-describedby","Info","action","Close","blueGrey","button","createMuiTheme","NotFound","fontWeight","ThemeProvider","react_router_dom","to","notify","notification","Notification","setTimeout","close","bind","URL","App","state","unSentMessages","offlineNotification","handleLogin","value","querySelector","localStorage","setItem","_this","setState","_this$state","socket","send","JSON","stringify","savedMessage","Math","random","toString","substr","Date","getTime","concat","Object","toConsumableArray","updateOnlineStatus","navigator","onLine","handleCloseSnackbar","reason","removeItem","_this2","this","getItem","ononline","onoffline","WebSocket","onopen","onmessage","arrayOfChatMessages","data","_this2$state","quantity","length","parse","reverse","hasFocus","permission","requestPermission","then","console","log","onclose","onerror","err","getBoundingClientRect","_this3","_this$state2","exact","path","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Component","ReactDOM","App_App","getElementById"],"mappings":"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","file":"static/js/main.84678082.chunk.js","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom'\nimport {\n  Avatar, Box, Button, CssBaseline, Grid,\n  TextField, Typography, Paper\n} from '@material-ui/core';\nimport Forum from '@material-ui/icons/Forum';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/random?nature)',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper_wrapper: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  header: {\n    textTransform: 'capitalize',\n  },\n  subheader: {\n    margin: theme.spacing(1, 0, 0),\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  author: {\n    textAlign: 'center',\n  },\n  author_link: {\n    color: 'inherit',\n    textDecoration: 'none',\n  },\n}));\n\nexport default ({ onClick, validationError }) => {\n  const classes = useStyles();\n\n  return (\n    <Route render={({ history }) => (\n      <Grid container component='main' className={classes.root}>\n        <CssBaseline />\n        <Grid item xs={false} sm={4} md={7} className={classes.image} />\n        <Grid className={classes.paper_wrapper} item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n              <Forum />\n            </Avatar>\n            <Typography className={classes.header} component='h1' variant='h5'>\n              Chat App\n          </Typography>\n            <Typography className={classes.subheader} variant='subtitle1'>\n              Please, enter your name to proceed\n          </Typography>\n            <form className={classes.form} noValidate>\n              <TextField\n                variant='outlined'\n                margin='normal'\n                required\n                fullWidth\n                id='nameBar'\n                label='Name'\n                name='name'\n                autoComplete='name'\n                autoFocus\n                error={validationError}\n                onKeyPress={e => {\n                  if (e.key === 'Enter') {\n                    e.preventDefault();\n\n                    if (onClick()) history.push('/');\n                  }\n                }}\n              />\n              <Button\n                fullWidth\n                variant='contained'\n                color='primary'\n                size='large'\n                onClick={() => {\n                  if (onClick()) history.push('/');\n                }}\n                className={classes.submit}\n              >\n                Submit\n            </Button>\n              <Box mt={5}>\n                <Typography className={classes.author} variant='body2' color='textSecondary'>\n                  <a className={classes.author_link} href='https://github.com/Arthur199212' target='_blank' rel=\"noopener noreferrer\">\n                    This Chat App was made by Arthur Rubchenko\n                </a>\n                </Typography>\n              </Box>\n            </form>\n          </div>\n        </Grid>\n      </Grid>\n    )}\n    />\n  );\n}\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport { Paper, InputBase, Divider, IconButton } from '@material-ui/core';\r\nimport Send from '@material-ui/icons/Send';\r\n\r\nconst useStyles = makeStyles({\r\n  wrapper: {\r\n    position: 'fixed',\r\n    bottom: 0,\r\n    display: 'flex',\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n    height: '55px',\r\n    backgroundColor: '#F5F5F5',\r\n  },\r\n  container: {\r\n    margin: '0 auto',\r\n    padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: '90%',\r\n  },\r\n  input: {\r\n    marginLeft: 8,\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n    color: blue[600],\r\n  },\r\n  divider: {\r\n    width: 1,\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n});\r\n\r\nexport default ({ handleSubmit }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <Paper className={classes.container}>\r\n        <InputBase\r\n          id='inputBar'\r\n          className={classes.input}\r\n          placeholder=\"Type a message...\"\r\n          onKeyPress={({ key }) => {\r\n            if (key === 'Enter') {\r\n              handleSubmit();\r\n            }\r\n          }}\r\n          autoComplete='off'\r\n        />\r\n        <Divider className={classes.divider} />\r\n        <IconButton\r\n          className={classes.iconButton}\r\n          color=\"primary\"\r\n          onClick={handleSubmit}\r\n        >\r\n          <Send />\r\n        </IconButton>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}","import React from 'react';\nimport {\n  Button, Dialog, DialogActions, DialogContent, \n  DialogContentText, DialogTitle, TextField\n} from '@material-ui/core';\n\nexport default ({ name, open, onClose,\n  handleSubmiteName, hadleLogOut, validationError }) => {\n\n  return (\n    <div>\n      <Dialog open={open} onClose={onClose} aria-labelledby=\"form-dialog\">\n        <DialogTitle id=\"form-dialog\">Hey, {name}!</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            You can change your name or log out if you want\n          </DialogContentText>\n          <TextField\n            margin='dense'\n            id='userName'\n            label='Type your name here...'\n            type='name'\n            fullWidth\n            autoComplete='false'\n            required\n            error={validationError}\n            onKeyPress={({ key }) => {\n              if (key === 'Enter') {\n                handleSubmiteName();\n              }\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={hadleLogOut} color=\"secondary\">\n            Log out\n          </Button>\n          <Button onClick={onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSubmiteName} color=\"primary\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { blue, green, red } from '@material-ui/core/colors';\nimport { withStyles } from '@material-ui/core/styles';\nimport { AppBar, IconButton, Toolbar, Typography, FormControlLabel, Switch } from '@material-ui/core';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\nimport FormDialog from './FormDialog';\n\nconst useStyles = makeStyles(theme => ({\n  menu_bar: {\n    backgroundColor: blue[600],\n  },\n  menu_toolbar: {\n    margin: '0 auto',\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '95%',\n  },\n  menu_statuses_bar: {\n    display: 'flex',\n  },\n}));\n\nconst OnlineSwitch = withStyles({\n  switchBase: {\n    color: red[500],\n    '&$checked': {\n      color: green['A400'],\n    },\n    '&$checked + $track': {\n      backgroundColor: green['A400'],\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\nexport default ({ connection, dialog, name, handleDialogOpen, \n  handleDialogClose, handleSubmiteName, hadleLogOut, validationError }) => {\n  const classes = useStyles();\n  let connectionMessage = 'Online';\n\n  if (!connection) connectionMessage = 'Offline';\n\n  return (\n    <>\n      <AppBar position=\"fixed\" className={classes.menu_bar}>\n        <Toolbar className={classes.menu_toolbar}>\n          <Typography variant=\"h6\">\n            Chat App\n          </Typography>\n\n          <div className={classes.menu_statuses_bar}>\n            <FormControlLabel\n              control={<OnlineSwitch checked={connection} />}\n              label={connectionMessage}\n              labelPlacement=\"end\"\n            />\n\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleDialogOpen}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <FormDialog \n                open={dialog} \n                name={name}\n                onClose={handleDialogClose} \n                handleSubmiteName={handleSubmiteName}\n                hadleLogOut={hadleLogOut}\n                validationError={validationError}\n              />\n            </div>\n          </div>\n        </Toolbar>\n      </AppBar>\n\n      <Toolbar />\n    </>\n  )\n}\n","const colors = [\r\n  \"#f44336\", \"#0097a7\", \"#673ab7\", \"#c62828\", \"#43a047\", \"#1976d2\", \"#0277bd\",\r\n  \"#f44336\", \"#616161\", \"#689f38\", \"#26a69a\", \"#3f51b5\", \"#607d8b\", \"#d81b60\",\r\n  \"#d84315\", \"#d32f2f\", \"#006064\", \"#33691e\", \"#ef6c00\", \"#795548\", \"#0d47a1\",\r\n  \"#039be5\", \"#827717\", \"#e65100\", \"#f06292\", \"#1565c0\", \"#4527a0\", \"#d81b60\",\r\n  \"#ec407a\", \"#ab47bc\", \"#558b2f\", \"#ff5722\", \"#283593\", \"#00897b\", \"#ad1457\",\r\n  \"#00838f\", \"#ab47bc\", \"#1e88e5\", \"#e64a19\", \"#0288d1\", \"#2196f3\"\r\n];\r\n\r\nconst symbols = 'abcdefjhigklmnoprstvwyzабвгдезиклмнопрст';\r\n\r\nexport default (userName) => {\r\n  const firstLetter = userName[0].toLocaleLowerCase();\r\n  const index = symbols.indexOf(firstLetter);\r\n\r\n  return index >= 0 ? colors[index] : colors.slice(-1);\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { blue, grey } from '@material-ui/core/colors';\r\nimport { Avatar, Card, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    padding: 10,\r\n  },\r\n  card_self: {\r\n    padding: 10,\r\n    backgroundColor: blue[500],\r\n    color: '#FFF',\r\n  },\r\n  card_self_unsent: {\r\n    padding: 10,\r\n    backgroundColor: grey[600],\r\n    color: '#FFF',\r\n  },\r\n  avatar: {\r\n    margin: '0 7px',\r\n  },\r\n  message_container: {\r\n    margin: 10,\r\n    display: 'flex',\r\n  },\r\n  message_container_reverse: {\r\n    margin: 10,\r\n    display: 'flex',\r\n    flexDirection: 'row-reverse',\r\n  },\r\n  message_header: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexWrap: 'wrap',\r\n  },\r\n  message_header_item: {\r\n    marginRight: 10,\r\n  },\r\n}));\r\n\r\nexport default ({\r\n  id, from, message, time, unsent, cardClass, message_container,\r\n  textPrimary, textSecondary, avatarColor, messageTime\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes[message_container]} key={id}>\r\n      <Avatar aria-label=\"avatar\" className={classes.avatar} style={{ backgroundColor: avatarColor }} >\r\n        {from[0].toUpperCase()}\r\n      </Avatar>\r\n      <Card className={classes[cardClass]}>\r\n        <div className={classes.message_header}>\r\n          <Typography\r\n            className={classes.message_header_item}\r\n            variant=\"body2\"\r\n            color={textPrimary}\r\n            component=\"p\"\r\n          >\r\n            {from}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"body2\"\r\n            color={textSecondary}\r\n            component=\"p\"\r\n          >\r\n            {!unsent ? messageTime : '[not sent yet]'}\r\n          </Typography>\r\n        </div>\r\n        <Typography\r\n          variant=\"body1\"\r\n          color={textPrimary}\r\n          component=\"p\"\r\n        >\r\n          {message}\r\n        </Typography>\r\n      </Card>\r\n    </div>\r\n  )\r\n}","import React, { useEffect } from 'react';\nimport moment from 'moment-timezone';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\n\nimport getAvatarColor from '../Helpers/getAvatarColor.helper';\nimport Message from './Message';\n\nexport default ({ name, chatMessages }) => {\n  // Scrolldown everytime componentDidMount\n  useEffect(() => {\n      const pageHeight = document.body.offsetHeight;\n      window.scrollTo(0, pageHeight);\n  }, [])\n\n  return (\n    <>\n      <CssBaseline />\n      <Container style={{ margin: '10px auto 70px', width: '95%' }} >\n        {chatMessages.map(({ id, from, message, time, unsent }) => {\n          const messageTime = moment(time).tz('Europe/Minsk').format('LT');\n\n          let cardClass = 'card';\n          let message_container = 'message_container';\n          let textPrimary = 'textPrimary';\n          let textSecondary = 'textSecondary';\n\n          if (name === from) {\n            if (!unsent) {\n              cardClass = 'card_self';\n            } else {\n              cardClass = 'card_self_unsent';\n            }\n            message_container = 'message_container_reverse';\n            textPrimary = textSecondary = 'initial';\n          }\n\n          const avatarColor = getAvatarColor(from);\n\n          return (\n            <Message \n              key={id}\n              id={id}\n              from={from}\n              message={message}\n              time={time}\n              unsent={unsent}\n              cardClass={cardClass}\n              message_container={message_container}\n              textPrimary={textPrimary}\n              textSecondary={textSecondary}\n              avatarColor={avatarColor}\n              messageTime={messageTime}\n            />\n          )\n        })}\n      </Container>\n    </>\n  )\n}\n","import React from 'react';\r\nimport { Info as InfoIcon, Close as CloseIcon } from '@material-ui/icons';\r\nimport { IconButton, SnackbarContent, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  info_wrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexWrap: 'nowrap',\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  info_container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  infoIcon: {\r\n    marginRight: 7,\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nexport default ({ onClose }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={classes.info_wrapper}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <div className={classes.info_container}>\r\n          <InfoIcon className={classes.infoIcon} />\r\n          <Typography variant='body2' id=\"client-snackbar\" className={classes.message}>\r\n            Your message will be sent when the app is online again.\r\n          </Typography>\r\n        </div>\r\n      }\r\n      action={[\r\n        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n    />\r\n  );\r\n}","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Typography } from '@material-ui/core';\r\nimport { makeStyles, createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { blue, blueGrey } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n    height: '95vh',\r\n  },\r\n  header: {\r\n    margin: theme.spacing(2, 0),\r\n    color: blue[500],\r\n  },\r\n  subheader: {\r\n    color: blueGrey[500],\r\n  },\r\n  button: {\r\n    margin: theme.spacing(2, 0),\r\n    textDecoration: 'none',\r\n  },\r\n}));\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: blue,\r\n  },\r\n});\r\n\r\n\r\nexport default () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography\r\n        className={classes.header}\r\n        variant='h1'\r\n        component='h2'\r\n        fontWeight={700}\r\n      >\r\n        Oops!\r\n        </Typography>\r\n      <Typography\r\n        className={classes.subheader}\r\n        variant='h5'\r\n      >\r\n        404 - Page not found\r\n      </Typography>\r\n      <ThemeProvider theme={theme}>\r\n        <Link to='/' className={classes.button}>\r\n          <Button variant=\"contained\" color=\"primary\">\r\n            Back to chat\r\n          </Button>\r\n        </Link>\r\n      </ThemeProvider>\r\n    </div>\r\n  )\r\n}","const notify = () => {\r\n  const notification = new Notification('Chat App', {\r\n    icon: 'https://arthur199212.github.io/chat-app/favicon.ico',\r\n    body: 'You have at least 1 new message in Chat App',\r\n  });\r\n\r\n  setTimeout(notification.close.bind(notification), 4000);\r\n}\r\n\r\nexport default () => {\r\n  // Let's check if the browser supports notifications\r\n  if (!(\"Notification\" in window)) {\r\n    console.log(\"This browser does not support desktop notification\");\r\n  }\r\n\r\n  // Let's check whether notification permissions have already been granted\r\n  else if (Notification.permission === \"granted\") {\r\n    // If it's okay let's create a notification\r\n    notify();\r\n  }\r\n\r\n  // Otherwise, we need to ask the user for permission\r\n  else if (Notification.permission !== \"denied\") {\r\n    Notification.requestPermission().then(function (permission) {\r\n      // If the user accepts, let's create a notification\r\n      if (permission === \"granted\") {\r\n        notify();\r\n      }\r\n    });\r\n  }\r\n}","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport { Snackbar } from '@material-ui/core';\n\nimport LogInPage from './Components/LogInPage';\nimport InputTextBar from './Components/InputTextBar';\nimport MenuBar from './Components/MenuBar';\nimport ChatBody from './Components/ChatBody';\nimport OfflineNotification from './Components/OfflineNotification';\nimport NotFound from './Components/NotFound';\n\nimport notification from './Helpers/notification.helper';\n\nconst URL = 'wss://wssproxy.herokuapp.com/';\n\nexport default class App extends Component {\n  state = {\n    connection: false,\n    name: 'Stranger',\n    chatMessages: [],\n    unSentMessages: [],\n    offlineNotification: false,\n    dialog: false,\n    validationError: false,\n  }\n\n  // Start connection with server via WebSocket\n  componentDidMount() {\n    const name = localStorage.getItem('name');\n\n    // Check for connectionm with the Internet\n    window.ononline = this.updateOnlineStatus;\n    window.onoffline = this.updateOnlineStatus;\n\n    this.socket = new WebSocket(URL);\n\n    this.socket.onopen = () => {\n      this.setState({\n        connection: true,\n        name: name,\n      })\n    }\n\n    // Handle getting messages from server\n    this.socket.onmessage = ({ data }) => {\n      const { name, chatMessages, unSentMessages } = this.state;\n      const quantity = unSentMessages.length;\n\n      // Detecting if there some unsent messages from offline mode\n      // if yes then show them as sent messages\n      let arrayOfChatMessages;\n      if (!quantity) {\n        arrayOfChatMessages = [...chatMessages];\n      } else {\n        arrayOfChatMessages = [...chatMessages.slice(0, -quantity)];\n      }\n\n      this.setState({\n        chatMessages: [...arrayOfChatMessages, ...JSON.parse(data).reverse()],\n        unSentMessages: [],\n      })\n\n      // Notify about a new message if document isn't in view\n      if (!document.hasFocus() && name) notification();\n    }\n\n    // Try to reconnect if connection closes\n    this.socket.onclose = () => {\n      this.socket = new WebSocket(URL);\n    }\n\n    // Close connection if error\n    this.socket.onerror = (err) => {\n      console.error('Socket error: ', err.message);\n      this.socket.close();\n    };\n\n    // Scrolldown\n    const pageHeight = document.body.offsetHeight;\n    window.scrollTo(0, pageHeight);\n  }\n\n  // Handling LoginPage form\n  handleLogin = () => {\n    const { value } = document.body.querySelector('#nameBar');\n\n    if (value) {\n      localStorage.setItem('name', value);\n\n      this.setState({\n        name: value,\n        validationError: false,\n      });\n\n      document.body.querySelector('#nameBar').value = '';\n\n      return true;\n    }\n\n    this.setState({\n      validationError: true,\n    })\n\n    return false;\n  }\n\n  // Handle submit of a new message from user\n  handleSubmit = () => {\n    const { value } = document.body.querySelector('#inputBar');\n    const { name, connection, chatMessages, unSentMessages } = this.state;\n\n    if (value !== '') {\n      this.socket.send(JSON.stringify({\n        from: name,\n        message: value,\n      }));\n\n      // Offline message notifications\n      if (!connection) {\n        const id = () => Math.random().toString(36).substr(2, 9);\n        const time = () => new Date().getTime();\n\n        const savedMessage = {\n          from: name,\n          message: value,\n          id: id(),\n          time: time(),\n          unsent: true,\n        }\n\n        this.setState({\n          offlineNotification: true,\n          unSentMessages: [...unSentMessages, savedMessage],\n          chatMessages: [...chatMessages, savedMessage],\n        });\n      }\n\n      document.body.querySelector('#inputBar').value = '';\n    }\n  }\n\n  // Update online status if it changes\n  updateOnlineStatus = () => {\n    this.setState({\n      connection: navigator.onLine,\n    })\n  }\n\n  // Handle offline notifications (snackbar)\n  handleCloseSnackbar = (e, reason) => {\n    if (reason === 'clickaway') return;\n\n    this.setState({\n      offlineNotification: false,\n    });\n  }\n\n  // Handling FormDialogactions - start\n  handleDialogOpen = () => {\n    this.setState({\n      dialog: true,\n    })\n  }\n\n  handleSubmiteName = () => {\n    const { value } = document.body.querySelector('#userName');\n\n    if (value) {\n      this.setState({\n        name: value,\n        dialog: false,\n        validationError: false,\n      })\n    } else {\n      this.setState({\n        validationError: true,\n      })\n    }\n  }\n\n  handleDialogClose = () => {\n    this.setState({\n      dialog: false,\n    })\n  }\n\n  hadleLogOut = () => {\n    localStorage.removeItem('name');\n\n    this.setState({\n      name: '',\n      dialog: false,\n    })\n  }\n  // Handling FormDialogactions - end\n\n  // Scrolldown if we have a new message\n  componentDidUpdate() {\n    const threshold = 1000;\n    const pageY = document.body.getBoundingClientRect().bottom;\n\n    // Scrolldown if we don't read previous messages\n    if (pageY < threshold) {\n      const pageHeight = document.body.offsetHeight;\n      window.scrollTo(0, pageHeight);\n    }\n  }\n\n  componentWillUnmount() {\n    this.socket.close();\n  }\n\n  render() {\n    // Basic styling\n    document.body.style.margin = 0;\n    document.body.style.backgroundColor = '#F5F5F5';\n\n    const { name, connection, chatMessages,\n      offlineNotification, dialog, validationError } = this.state;\n\n    return (\n      <Router >\n        <>\n          <Switch>\n            <Route exact path='/login' render={() =>\n              <LogInPage\n                onClick={this.handleLogin}\n                validationError={validationError}\n              />\n            }\n            />\n\n            <Route\n              exact\n              path='/'\n              render={() => (\n                !name ? (\n                  <Redirect to=\"/login\" />\n                )\n                  : (\n                    <>\n                      <MenuBar\n                        connection={connection}\n                        name={name}\n                        dialog={dialog}\n                        validationError={validationError}\n                        hadleLogOut={this.hadleLogOut}\n                        handleDialogOpen={this.handleDialogOpen}\n                        handleDialogClose={this.handleDialogClose}\n                        handleSubmiteName={this.handleSubmiteName}\n                      />\n\n                      <ChatBody\n                        name={name}\n                        chatMessages={chatMessages}\n                      />\n\n                      <InputTextBar\n                        handleSubmit={this.handleSubmit}\n                      />\n\n                      <Snackbar\n                        anchorOrigin={{\n                          vertical: 'bottom',\n                          horizontal: 'center',\n                        }}\n                        open={offlineNotification}\n                        autoHideDuration={4000}\n                        onClose={this.handleCloseSnackbar}\n                      >\n                        <OfflineNotification\n                          onClose={this.handleCloseSnackbar}\n                        />\n                      </Snackbar>\n                    </>\n                  )\n              )\n              }\n            />\n\n            <Route path='/' component={NotFound} />\n          </Switch>\n        </>\n      </Router>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}