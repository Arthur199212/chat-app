{"version":3,"sources":["Components/LogInPage.js","Components/InputTextBar.js","Components/FormDialog.js","Components/MenuBar.js","Helpers/getAvatarColor.helper.js","Components/Message.js","Components/ChatBody.js","Components/OfflineNotification.js","Components/NotFound.js","Helpers/notification.helper.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","paper_wrapper","display","justifyContent","alignItems","paper","flexDirection","avatar","margin","spacing","backgroundColor","palette","primary","main","header","textTransform","subheader","form","width","marginTop","submit","author","textAlign","author_link","color","textDecoration","LogInPage","_ref","onClick","classes","react_default","a","createElement","react_router","render","_ref2","history","Grid","container","component","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","Forum_default","Typography","variant","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","onKeyPress","e","key","preventDefault","push","Button","size","Box","mt","href","target","rel","wrapper","position","bottom","padding","input","marginLeft","flex","iconButton","blue","divider","InputTextBar","handleSubmit","InputBase","placeholder","Divider","IconButton","Send_default","FormDialog","open","onClose","handleSubmiteName","hadleLogOut","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","type","DialogActions","menu_bar","menu_toolbar","menu_statuses_bar","OnlineSwitch","withStyles","switchBase","red","&$checked","green","&$checked + $track","checked","track","Switch","MenuBar","connection","dialog","handleDialogOpen","handleDialogClose","connectionMessage","Fragment","AppBar","Toolbar","FormControlLabel","control","labelPlacement","aria-label","aria-controls","aria-haspopup","AccountCircle_default","colors","card","card_self","card_self_unsent","grey","message_container","message_container_reverse","message_header","flexWrap","message_header_item","marginRight","Message","from","message","unsent","time","cardClass","textPrimary","textSecondary","avatarColor","messageTime","style","toUpperCase","Card","ChatBody","chatMessages","useEffect","pageHeight","document","body","offsetHeight","window","scrollTo","Container","map","moment","tz","format","userName","firstLetter","toLocaleLowerCase","index","indexOf","slice","getAvatarColor","info_wrapper","info_container","infoIcon","icon","fontSize","iconVariant","opacity","OfflineNotification","SnackbarContent","aria-describedby","Info","action","Close","blueGrey","button","createMuiTheme","NotFound","fontWeight","ThemeProvider","react_router_dom","to","notify","notification","Notification","setTimeout","close","bind","socket","WebSocket","App","state","unSentMessages","offlineNotification","handleLogin","value","querySelector","localStorage","setItem","_this","setState","_this$state","send","JSON","stringify","savedMessage","Math","random","toString","substr","Date","getTime","concat","Object","toConsumableArray","updateOnlineStatus","navigator","onLine","handleCloseSnackbar","reason","removeItem","_this2","this","getItem","onopen","ononline","onoffline","onmessage","arrayOfChatMessages","data","_this2$state","quantity","length","parse","reverse","hasFocus","permission","requestPermission","then","console","log","getBoundingClientRect","_this3","_this$state2","exact","path","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Component","ReactDOM","App_App","getElementById"],"mappings":"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","file":"static/js/main.b6a9f631.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Route } from 'react-router-dom'\r\nimport {\r\n  Avatar, Box, Button, CssBaseline, Grid,\r\n  TextField, Typography, Paper\r\n} from '@material-ui/core';\r\nimport Forum from '@material-ui/icons/Forum';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(https://source.unsplash.com/random?nature)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper_wrapper: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  paper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  header: {\r\n    textTransform: 'capitalize',\r\n  },\r\n  subheader: {\r\n    margin: theme.spacing(1, 0, 0),\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  author: {\r\n    textAlign: 'center',\r\n  },\r\n  author_link: {\r\n    color: 'inherit',\r\n    textDecoration: 'none',\r\n  },\r\n}));\r\n\r\nexport default ({ onClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Route render={({ history }) => (\r\n      <Grid container component='main' className={classes.root}>\r\n        <CssBaseline />\r\n        <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n        <Grid className={classes.paper_wrapper} item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <Forum />\r\n            </Avatar>\r\n            <Typography className={classes.header} component='h1' variant='h5'>\r\n              Chat App\r\n          </Typography>\r\n            <Typography className={classes.subheader} variant='subtitle1'>\r\n              Please, enter your name to proceed\r\n          </Typography>\r\n            <form className={classes.form} noValidate>\r\n              <TextField\r\n                variant='outlined'\r\n                margin='normal'\r\n                required\r\n                fullWidth\r\n                id='nameBar'\r\n                label='Name'\r\n                name='name'\r\n                autoComplete='name'\r\n                autoFocus\r\n                // error='true'\r\n                onKeyPress={e => {\r\n                  if (e.key === 'Enter') {\r\n                    e.preventDefault();\r\n\r\n                    if (onClick()) history.push('/');\r\n                  }\r\n                }}\r\n              />\r\n              <Button\r\n                fullWidth\r\n                variant='contained'\r\n                color='primary'\r\n                size='large'\r\n                onClick={() => {\r\n                  if (onClick()) history.push('/');\r\n                }}\r\n                className={classes.submit}\r\n              >\r\n                Submit\r\n            </Button>\r\n              <Box mt={5}>\r\n                <Typography className={classes.author} variant='body2' color='textSecondary'>\r\n                  <a className={classes.author_link} href='https://github.com/Arthur199212' target='_blank' rel=\"noopener noreferrer\">\r\n                    This Chat App was made by Arthur Rubchenko\r\n                </a>\r\n                </Typography>\r\n              </Box>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    )}\r\n    />\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport { Paper, InputBase, Divider, IconButton } from '@material-ui/core';\r\nimport Send from '@material-ui/icons/Send';\r\n\r\nconst useStyles = makeStyles({\r\n  wrapper: {\r\n    position: 'fixed',\r\n    bottom: 0,\r\n    display: 'flex',\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n    height: '55px',\r\n    backgroundColor: '#F5F5F5',\r\n  },\r\n  container: {\r\n    margin: '0 auto',\r\n    padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: '90%',\r\n  },\r\n  input: {\r\n    marginLeft: 8,\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n    color: blue[600],\r\n  },\r\n  divider: {\r\n    width: 1,\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n});\r\n\r\nexport default ({ handleSubmit }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <Paper className={classes.container}>\r\n        <InputBase\r\n          id='inputBar'\r\n          className={classes.input}\r\n          placeholder=\"Type a message...\"\r\n          onKeyPress={({ key }) => {\r\n            if (key === 'Enter') {\r\n              handleSubmit();\r\n            }\r\n          }}\r\n          autoComplete='off'\r\n        />\r\n        <Divider className={classes.divider} />\r\n        <IconButton\r\n          className={classes.iconButton}\r\n          color=\"primary\"\r\n          onClick={handleSubmit}\r\n        >\r\n          <Send />\r\n        </IconButton>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport {\r\n  Button, Dialog, DialogActions, DialogContent, \r\n  DialogContentText, DialogTitle, TextField\r\n} from '@material-ui/core';\r\n\r\nexport default ({ name, open, onClose, handleSubmiteName, hadleLogOut }) => {\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={onClose} aria-labelledby=\"form-dialog\">\r\n        <DialogTitle id=\"form-dialog\">Hey, {name}!</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            You can change your name or log out if you want\r\n          </DialogContentText>\r\n          <TextField\r\n            margin='dense'\r\n            id='userName'\r\n            label='Type your name here...'\r\n            type='name'\r\n            fullWidth\r\n            autoComplete='false'\r\n            onKeyPress={({ key }) => {\r\n              if (key === 'Enter') {\r\n                handleSubmiteName();\r\n              }\r\n            }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={hadleLogOut} color=\"secondary\">\r\n            Log out\r\n          </Button>\r\n          <Button onClick={onClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSubmiteName} color=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { blue, green, red } from '@material-ui/core/colors';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { AppBar, IconButton, Toolbar, Typography, FormControlLabel, Switch } from '@material-ui/core';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\n\r\nimport FormDialog from './FormDialog';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  menu_bar: {\r\n    backgroundColor: blue[600],\r\n  },\r\n  menu_toolbar: {\r\n    margin: '0 auto',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    width: '95%',\r\n  },\r\n  menu_statuses_bar: {\r\n    display: 'flex',\r\n  },\r\n}));\r\n\r\nconst OnlineSwitch = withStyles({\r\n  switchBase: {\r\n    color: red[500],\r\n    '&$checked': {\r\n      color: green['A400'],\r\n    },\r\n    '&$checked + $track': {\r\n      backgroundColor: green['A400'],\r\n    },\r\n  },\r\n  checked: {},\r\n  track: {},\r\n})(Switch);\r\n\r\nexport default ({ connection, dialog, name, handleDialogOpen, \r\n  handleDialogClose, handleSubmiteName, hadleLogOut }) => {\r\n  const classes = useStyles();\r\n  let connectionMessage = 'Online';\r\n\r\n  if (!connection) connectionMessage = 'Offline';\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"fixed\" className={classes.menu_bar}>\r\n        <Toolbar className={classes.menu_toolbar}>\r\n          <Typography variant=\"h6\">\r\n            Chat App\r\n          </Typography>\r\n\r\n          <div className={classes.menu_statuses_bar}>\r\n            <FormControlLabel\r\n              control={<OnlineSwitch checked={connection} />}\r\n              label={connectionMessage}\r\n              labelPlacement=\"end\"\r\n            />\r\n\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleDialogOpen}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <FormDialog \r\n                open={dialog} \r\n                name={name}\r\n                onClose={handleDialogClose} \r\n                handleSubmiteName={handleSubmiteName}\r\n                hadleLogOut={hadleLogOut}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Toolbar />\r\n    </>\r\n  )\r\n}\r\n","const colors = [\r\n  \"#f44336\", \"#0097a7\", \"#673ab7\", \"#c62828\", \"#43a047\", \"#1976d2\", \"#0277bd\",\r\n  \"#f44336\", \"#616161\", \"#689f38\", \"#26a69a\", \"#3f51b5\", \"#607d8b\", \"#d81b60\",\r\n  \"#d84315\", \"#d32f2f\", \"#006064\", \"#33691e\", \"#ef6c00\", \"#795548\", \"#0d47a1\",\r\n  \"#039be5\", \"#827717\", \"#e65100\", \"#f06292\", \"#1565c0\", \"#4527a0\", \"#d81b60\",\r\n  \"#ec407a\", \"#ab47bc\", \"#558b2f\", \"#ff5722\", \"#283593\", \"#00897b\", \"#ad1457\",\r\n  \"#00838f\", \"#ab47bc\", \"#1e88e5\", \"#e64a19\", \"#0288d1\", \"#2196f3\"\r\n];\r\n\r\nconst symbols = 'abcdefjhigklmnoprstvwyzабвгдезиклмнопрст';\r\n\r\nexport default (userName) => {\r\n  const firstLetter = userName[0].toLocaleLowerCase();\r\n  const index = symbols.indexOf(firstLetter);\r\n\r\n  return index >= 0 ? colors[index] : colors.slice(-1);\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { blue, grey } from '@material-ui/core/colors';\r\nimport { Avatar, Card, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    padding: 10,\r\n  },\r\n  card_self: {\r\n    padding: 10,\r\n    backgroundColor: blue[500],\r\n    color: '#FFF',\r\n  },\r\n  card_self_unsent: {\r\n    padding: 10,\r\n    backgroundColor: grey[600],\r\n    color: '#FFF',\r\n  },\r\n  avatar: {\r\n    margin: '0 7px',\r\n  },\r\n  message_container: {\r\n    margin: 10,\r\n    display: 'flex',\r\n  },\r\n  message_container_reverse: {\r\n    margin: 10,\r\n    display: 'flex',\r\n    flexDirection: 'row-reverse',\r\n  },\r\n  message_header: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexWrap: 'wrap',\r\n  },\r\n  message_header_item: {\r\n    marginRight: 10,\r\n  },\r\n}));\r\n\r\nexport default ({\r\n  id, from, message, time, unsent, cardClass, message_container,\r\n  textPrimary, textSecondary, avatarColor, messageTime\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes[message_container]} key={id}>\r\n      <Avatar aria-label=\"avatar\" className={classes.avatar} style={{ backgroundColor: avatarColor }} >\r\n        {from[0].toUpperCase()}\r\n      </Avatar>\r\n      <Card className={classes[cardClass]}>\r\n        <div className={classes.message_header}>\r\n          <Typography\r\n            className={classes.message_header_item}\r\n            variant=\"body2\"\r\n            color={textPrimary}\r\n            component=\"p\"\r\n          >\r\n            {from}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"body2\"\r\n            color={textSecondary}\r\n            component=\"p\"\r\n          >\r\n            {!unsent ? messageTime : '[not sent yet]'}\r\n          </Typography>\r\n        </div>\r\n        <Typography\r\n          variant=\"body1\"\r\n          color={textPrimary}\r\n          component=\"p\"\r\n        >\r\n          {message}\r\n        </Typography>\r\n      </Card>\r\n    </div>\r\n  )\r\n}","import React, { useEffect } from 'react';\r\nimport moment from 'moment-timezone';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport getAvatarColor from '../Helpers/getAvatarColor.helper';\r\nimport Message from './Message';\r\n\r\nexport default ({ name, chatMessages }) => {\r\n  // Scrolldown everytime componentDidMount\r\n  useEffect(() => {\r\n      const pageHeight = document.body.offsetHeight;\r\n      window.scrollTo(0, pageHeight);\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <Container style={{ margin: '10px auto 70px', width: '95%' }} >\r\n        {chatMessages.map(({ id, from, message, time, unsent }) => {\r\n          const messageTime = moment(time).tz('Europe/Minsk').format('LT');\r\n\r\n          let cardClass = 'card';\r\n          let message_container = 'message_container';\r\n          let textPrimary = 'textPrimary';\r\n          let textSecondary = 'textSecondary';\r\n\r\n          if (name === from) {\r\n            if (!unsent) {\r\n              cardClass = 'card_self';\r\n            } else {\r\n              cardClass = 'card_self_unsent';\r\n            }\r\n            message_container = 'message_container_reverse';\r\n            textPrimary = textSecondary = 'initial';\r\n          }\r\n\r\n          const avatarColor = getAvatarColor(from);\r\n\r\n          return (\r\n            <Message \r\n              key={id}\r\n              id={id}\r\n              from={from}\r\n              message={message}\r\n              time={time}\r\n              unsent={unsent}\r\n              cardClass={cardClass}\r\n              message_container={message_container}\r\n              textPrimary={textPrimary}\r\n              textSecondary={textSecondary}\r\n              avatarColor={avatarColor}\r\n              messageTime={messageTime}\r\n            />\r\n          )\r\n        })}\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Info as InfoIcon, Close as CloseIcon } from '@material-ui/icons';\r\nimport { IconButton, SnackbarContent, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  info_wrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexWrap: 'nowrap',\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  info_container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  infoIcon: {\r\n    marginRight: 7,\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nexport default ({ onClose }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={classes.info_wrapper}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <div className={classes.info_container}>\r\n          <InfoIcon className={classes.infoIcon} />\r\n          <Typography variant='body2' id=\"client-snackbar\" className={classes.message}>\r\n            Your message will be sent when the app is online again.\r\n          </Typography>\r\n        </div>\r\n      }\r\n      action={[\r\n        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n    />\r\n  );\r\n}","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Typography } from '@material-ui/core';\r\nimport { makeStyles, createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { blue, blueGrey } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n    height: '95vh',\r\n  },\r\n  header: {\r\n    margin: theme.spacing(2, 0),\r\n    color: blue[500],\r\n  },\r\n  subheader: {\r\n    color: blueGrey[500],\r\n  },\r\n  button: {\r\n    margin: theme.spacing(2, 0),\r\n    textDecoration: 'none',\r\n  },\r\n}));\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: blue,\r\n  },\r\n});\r\n\r\n\r\nexport default () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography\r\n        className={classes.header}\r\n        variant='h1'\r\n        component='h2'\r\n        fontWeight={700}\r\n      >\r\n        Oops!\r\n        </Typography>\r\n      <Typography\r\n        className={classes.subheader}\r\n        variant='h5'\r\n      >\r\n        404 - Page not found\r\n      </Typography>\r\n      <ThemeProvider theme={theme}>\r\n        <Link to='/' className={classes.button}>\r\n          <Button variant=\"contained\" color=\"primary\">\r\n            Back to chat\r\n          </Button>\r\n        </Link>\r\n      </ThemeProvider>\r\n    </div>\r\n  )\r\n}","const notify = () => {\r\n  const notification = new Notification('Chat App', {\r\n    icon: 'https://arthur199212.github.io/chat-app/favicon.ico',\r\n    body: 'You have at least 1 new message in Chat App',\r\n  });\r\n\r\n  setTimeout(notification.close.bind(notification), 4000);\r\n}\r\n\r\nexport default () => {\r\n  // Let's check if the browser supports notifications\r\n  if (!(\"Notification\" in window)) {\r\n    console.log(\"This browser does not support desktop notification\");\r\n  }\r\n\r\n  // Let's check whether notification permissions have already been granted\r\n  else if (Notification.permission === \"granted\") {\r\n    // If it's okay let's create a notification\r\n    notify();\r\n  }\r\n\r\n  // Otherwise, we need to ask the user for permission\r\n  else if (Notification.permission !== \"denied\") {\r\n    Notification.requestPermission().then(function (permission) {\r\n      // If the user accepts, let's create a notification\r\n      if (permission === \"granted\") {\r\n        notify();\r\n      }\r\n    });\r\n  }\r\n}","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport { Snackbar } from '@material-ui/core';\n\nimport LogInPage from './Components/LogInPage';\nimport InputTextBar from './Components/InputTextBar';\nimport MenuBar from './Components/MenuBar';\nimport ChatBody from './Components/ChatBody';\nimport OfflineNotification from './Components/OfflineNotification';\nimport NotFound from './Components/NotFound';\n\nimport notification from './Helpers/notification.helper';\n\nconst socket = new WebSocket('wss://wssproxy.herokuapp.com/');\n\nexport default class App extends Component {\n  state = {\n    connection: false,\n    name: 'user name',\n    chatMessages: [],\n    unSentMessages: [],\n    offlineNotification: false,\n    dialog: false,\n  }\n\n  // Start connection with server via WebSocket\n  componentDidMount() {\n    const name = localStorage.getItem('name');\n\n    socket.onopen = () => {\n      this.setState({\n        connection: true,\n        name: name,\n      })\n    }\n\n    // Check for connectionm with the Internet\n    window.ononline = this.updateOnlineStatus;\n    window.onoffline = this.updateOnlineStatus;\n    \n    // Handle getting messages from server\n    socket.onmessage = ({ data }) => {\n      const { chatMessages, unSentMessages } = this.state;\n      const quantity = unSentMessages.length;\n\n      // Detecting if there some unsent messages from offline mode\n      // if yes then show them as sent messages\n      let arrayOfChatMessages;\n      if (!quantity) {\n        arrayOfChatMessages = [...chatMessages];\n      } else {\n        arrayOfChatMessages = [...chatMessages.slice(0, -quantity)];\n      }\n      \n      this.setState({\n        chatMessages: [...arrayOfChatMessages, ...JSON.parse(data).reverse()],\n        unSentMessages: [],\n      })\n\n      // Notify about a new message if document isn't in view\n      if (!document.hasFocus()) notification();\n    }\n\n    // Scrolldown\n    const pageHeight = document.body.offsetHeight;\n    window.scrollTo(0, pageHeight);\n  }\n\n  // Handling LoginPage form\n  handleLogin = () => {\n    const { value } = document.body.querySelector('#nameBar');\n\n    if (value) {\n      localStorage.setItem('name', value);\n\n      this.setState({\n        name: value,\n      });\n\n      document.body.querySelector('#nameBar').value = '';\n\n      return true;\n    }\n\n    return false;\n  }\n\n  // Handle submit of a new message from user\n  handleSubmit = () => {\n    const { value } = document.body.querySelector('#inputBar');\n    const { name, connection, chatMessages, unSentMessages } = this.state;\n\n    if (value !== '') {\n      socket.send(JSON.stringify({\n        from: name,\n        message: value,\n      }));\n\n      // Offline message notifications\n      if (!connection) {\n        const id = () => Math.random().toString(36).substr(2, 9);\n        const time = () => new Date().getTime();\n\n        const savedMessage = {\n          from: name,\n          message: value,\n          id: id(),\n          time: time(),\n          unsent: true,\n        }\n\n        this.setState({\n          offlineNotification: true,\n          unSentMessages: [...unSentMessages, savedMessage],\n          chatMessages: [...chatMessages, savedMessage],\n        });\n      }\n\n      document.body.querySelector('#inputBar').value = '';\n    }\n  }\n\n  // Update online status if it changes\n  updateOnlineStatus = () => {\n    this.setState({\n      connection: navigator.onLine,\n    })\n  }\n\n  // Handle offline notifications (snackbar)\n  handleCloseSnackbar = (e, reason) => {\n    if (reason === 'clickaway') return;\n\n    this.setState({\n      offlineNotification: false,\n    });\n  }\n\n  // Handling FormDialogactions - start\n  handleDialogOpen = () => {\n    this.setState({\n      dialog: true,\n    })\n  }\n\n  handleSubmiteName = () => {\n    const { value } = document.body.querySelector('#userName');\n\n    this.setState({\n      name: value,\n      dialog: false,\n    })\n  }\n\n  handleDialogClose = () => {\n    this.setState({\n      dialog: false,\n    })\n  }\n\n  hadleLogOut = () => {\n    localStorage.removeItem('name');\n\n    this.setState({\n      name: null,\n      dialog: false,\n    })\n  }\n  // Handling FormDialogactions - end\n\n  // Scrolldown if we have a new message\n  componentDidUpdate() {\n    const threshold = 1000;\n    const pageY = document.body.getBoundingClientRect().bottom;\n\n    // Scrolldown if we don't read previous messages\n    if (pageY < threshold) {\n      const pageHeight = document.body.offsetHeight;\n      window.scrollTo(0, pageHeight);\n    }\n  }\n\n  render() {\n    // Basic styling\n    document.body.style.margin = 0;\n    document.body.style.backgroundColor = '#F5F5F5';\n\n    const { name, connection, chatMessages, offlineNotification, dialog } = this.state;\n\n    return (\n      <Router >\n        <>\n          <Switch>\n            <Route exact path='/login' render={() => <LogInPage onClick={this.handleLogin}/>} />\n\n            <Route\n              exact\n              path='/'\n              render={() => (\n                !name ? (\n                  <Redirect to=\"/login\" />\n                )\n                  : (\n                    <>\n                      <MenuBar\n                        connection={connection}\n                        name={name}\n                        dialog={dialog}\n                        hadleLogOut={this.hadleLogOut}\n                        handleDialogOpen={this.handleDialogOpen}\n                        handleDialogClose={this.handleDialogClose}\n                        handleSubmiteName={this.handleSubmiteName}\n                      />\n\n                      <ChatBody\n                        name={name}\n                        chatMessages={chatMessages}\n                      />\n\n                      <InputTextBar\n                        handleSubmit={this.handleSubmit}\n                      />\n\n                      <Snackbar\n                        anchorOrigin={{\n                          vertical: 'bottom',\n                          horizontal: 'center',\n                        }}\n                        open={offlineNotification}\n                        autoHideDuration={4000}\n                        onClose={this.handleCloseSnackbar}\n                      >\n                        <OfflineNotification\n                          onClose={this.handleCloseSnackbar}\n                        />\n                      </Snackbar>\n                    </>\n                  )\n              )\n              }\n            />\n\n            <Route path='/' component={NotFound} />\n          </Switch>\n        </>\n      </Router>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}